import { Markup, Scenes } from "telegraf";
import { prisma } from "../../db";
import WebUserService from "../../webUsers/webUserService";
import userMiddleware from "../bMiddlewares/userMiddleware";
import { Context } from "../bTypes";

export const linkScene = new Scenes.BaseScene<Context>("linkSettings");

const BACK_BUTTON = "üîô –ù–∞–∑–∞–¥";
const BACK_BUTTON_CALLBACK = "back";

const UNLIK_BUTTON = "üîó –û—Ç–≤—è–∑–∞—Ç—å";
const UNLIK_BUTTON_CALLBACK = "unlink";

const LINK_BUTTON = "üîó –ü—Ä–∏–≤—è–∑–∞—Ç—å";
const LINK_BUTTON_CALLBACK = "link";

linkScene.use(userMiddleware)

linkScene.enter(async (ctx) => {
    console.log(ctx.user);
    
    let web = await prisma.webUser.findFirst({where: {tgUserId: ctx.user.id}})
    let isConnected = web !== null;

    let text = `
        üåê –í–µ–±-–∞–∫–∫–∞—É–Ω—Ç ${isConnected ? "–ø—Ä–∏–≤—è–∑–∞–Ω" : "–Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω"} –∫ Telegram –∞–∫–∫–∞—É–Ω—Ç—É ${isConnected ? `(${web?.username})` : ''}
    `

    await ctx.reply(text, Markup.inlineKeyboard(
        [
            [
                isConnected ? Markup.button.callback(UNLIK_BUTTON, UNLIK_BUTTON_CALLBACK) : Markup.button.callback(LINK_BUTTON, LINK_BUTTON_CALLBACK)
            ],
            [
                Markup.button.callback(BACK_BUTTON, BACK_BUTTON_CALLBACK)
            ]
        ]
    ));
});

linkScene.action(BACK_BUTTON_CALLBACK, async (ctx) => {
    await ctx.scene.leave();
    return await ctx.scene.enter("profile");
});

linkScene.action(UNLIK_BUTTON_CALLBACK, async (ctx) => {
    let web = await prisma.webUser.findFirst({where: {tgUserId: ctx.user.id}})
    let isConnected = web !== null;

    if (!isConnected) return await ctx.reply("–í–µ–±-–∞–∫–∫–∞—É–Ω—Ç –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ Telegram –∞–∫–∫–∞—É–Ω—Ç—É");

    await WebUserService.unlinkTelegram(ctx.user);

    return await ctx.reply("–ê–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–≤—è–∑–∞–Ω.", Markup.inlineKeyboard([Markup.button.callback(BACK_BUTTON, BACK_BUTTON_CALLBACK)]));
});

linkScene.action(LINK_BUTTON_CALLBACK, async (ctx) => {
    await ctx.reply("–î–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ –≤–∞–º –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —Å–∞–π—Ç–µ –∏ –≤ –ø—Ä–æ—Ñ–∏–ª–µ –Ω–∞–∂–∞—Ç—å –ü—Ä–∏–≤—è–∑–∞—Ç—å Telegram")
});